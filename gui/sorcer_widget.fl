# data file for the Fltk User Interface Designer (fluid)
version 1.0300 
header_name {.h} 
code_name {.cxx}
class SorcerUI {open
} {
  Function {update_button(int button)} {
    comment {if the type of filter changes, this function will highlight the right button} open return_type void
  } {
    code {} {}
  }
  Function {SorcerUI()} {open
  } {
    Fl_Window window {open
      xywh {2071 335 515 450} type Double color 48
      code0 {\#include "lv2/lv2plug.in/ns/extensions/ui/ui.h"}
      code1 {\#include <iostream>}
      code2 {using namespace std;}
      code3 {\#include "ports.h"} visible
    } {
      Fl_Box headerImage {
        label {header.png}
        xywh {0 0 515 36} labelcolor 20 when 6
        code0 {\#include "avtk.h"}
        code1 {\#include <stdio.h>}
        code2 {\#include "header.c"}
        code3 {headerImage->setPixbuf(header.pixel_data,4);}
        class {Avtk::Image}
      }
      Fl_Box {} {
        label {Wave 1}
        callback {//cutoff = o->value();
//float g = o->getGain();
//gainDial->value( g );
//freq->value( cutoff ); // update dial
//writePort(CUTOFF_FREQ, cutoff);
//writePort(CUTOFF_GAIN, g);}
        xywh {10 40 158 126} box UP_BOX labeltype NO_LABEL labelcolor 20
        class {Avtk::Background}
      }
      Fl_Box {} {
        label {Wave 2}
        callback {//cutoff = o->value();
//float g = o->getGain();
//gainDial->value( g );
//freq->value( cutoff ); // update dial
//writePort(CUTOFF_FREQ, cutoff);
//writePort(CUTOFF_GAIN, g);}
        xywh {10 174 158 126} box UP_BOX labeltype NO_LABEL labelcolor 20
        class {Avtk::Background}
      }
      Fl_Box {} {
        label {Sub-Bass}
        callback {//cutoff = o->value();
//float g = o->getGain();
//gainDial->value( g );
//freq->value( cutoff ); // update dial
//writePort(CUTOFF_FREQ, cutoff);
//writePort(CUTOFF_GAIN, g);}
        xywh {10 311 158 126} box UP_BOX labeltype NO_LABEL labelcolor 20
        class {Avtk::Background}
      }
      Fl_Box {} {
        label LFO
        callback {//cutoff = o->value();
//float g = o->getGain();
//gainDial->value( g );
//freq->value( cutoff ); // update dial
//writePort(CUTOFF_FREQ, cutoff);
//writePort(CUTOFF_GAIN, g);}
        xywh {179 40 158 194} box UP_BOX labeltype NO_LABEL labelcolor 20
        class {Avtk::Background}
      }
      Fl_Box {} {
        label Remove
        callback {//cutoff = o->value();
//float g = o->getGain();
//gainDial->value( g );
//freq->value( cutoff ); // update dial
//writePort(CUTOFF_FREQ, cutoff);
//writePort(CUTOFF_GAIN, g);}
        xywh {179 244 158 194} box UP_BOX labeltype NO_LABEL labelcolor 20
        class {Avtk::Background}
      }
      Fl_Box {} {
        label ADSR
        callback {//cutoff = o->value();
//float g = o->getGain();
//gainDial->value( g );
//freq->value( cutoff ); // update dial
//writePort(CUTOFF_FREQ, cutoff);
//writePort(CUTOFF_GAIN, g);}
        xywh {348 40 158 194} box UP_BOX labeltype NO_LABEL labelcolor 20
        class {Avtk::Background}
      }
      Fl_Box {} {
        label Master
        callback {//cutoff = o->value();
//float g = o->getGain();
//gainDial->value( g );
//freq->value( cutoff ); // update dial
//writePort(CUTOFF_FREQ, cutoff);
//writePort(CUTOFF_GAIN, g);}
        xywh {348 244 158 194} box UP_BOX labeltype NO_LABEL labelcolor 20
        class {Avtk::Background}
      }
      Fl_Dial wave1 {
        label {Wave 1}
        callback {float x = o->X();
float y = o->Y();
writePort(OSC_1_VOLUME, y);
writePort(WAVETABLE_1_POS, x);}
        xywh {15 64 148 98} box UP_BOX color 179 labeltype NO_LABEL
        class {Avtk::Oscillator}
      }
      Fl_Dial wave2 {
        label {Wave 2}
        callback {float x = o->X();
float y = o->Y();
writePort(OSC_2_VOLUME, y);
writePort(WAVETABLE_2_POS, x);}
        xywh {15 198 148 98} box UP_BOX color 179 labeltype NO_LABEL
        class {Avtk::Oscillator}
      }
      Fl_Dial subbass {
        label {Sub-Bass}
        callback {o->X( 0.5 );
o->modulation( 0 );
float tmp = o->Y();
writePort(OSC_3_VOLUME, tmp );}
        xywh {15 335 148 98} box UP_BOX color 179 labeltype NO_LABEL
        class {Avtk::Oscillator}
      }
      Fl_Dial lfo {
        label LFO
        callback {//cutoff = o->value();
//float g = o->getGain();
//gainDial->value( g );
//freq->value( cutoff ); // update dial
//writePort(CUTOFF_FREQ, cutoff);
//writePort(CUTOFF_GAIN, g);}
        xywh {184 64 148 90} box UP_BOX color 179 labeltype NO_LABEL
        class {Avtk::LFO}
      }
      Fl_Box {} {
        xywh {182 157 152 75} box DOWN_BOX labeltype NO_LABEL
      }
      Fl_Dial lfoSpeed {
        label Speed
        callback {float tmp = o->value();
lfo->modulation( tmp );
writePort( int(LFO_FREQUENCY), tmp );}
        xywh {258 165 30 30} color 90 labelsize 10
        class {Avtk::Dial}
      }
      Fl_Dial lfoToW2 {
        label W2
        callback {float tmp = o->value();
wave2->modulation( tmp );
writePort( int(LFO_TO_WAVETABLE_2), tmp );}
        xywh {223 185 30 30} color 90 labelsize 10
        class {Avtk::Dial}
      }
      Fl_Dial lfoToW1 {
        label {W 1}
        callback {float tmp = o->value();
wave1->modulation( tmp );
writePort( int(LFO_TO_WAVETABLE_1),tmp );}
        xywh {189 164 30 30} color 90 labelsize 10
        class {Avtk::Dial}
      }
      Fl_Dial lfoAmp {
        label Amp
        callback {float tmp = o->value();
lfo->value( tmp );
writePort( int(LFO_AMPLITUDE), tmp );}
        xywh {296 186 30 30} color 90 labelsize 10
        class {Avtk::Dial}
      }
      Fl_Dial filter {
        label LFO
        callback {float tmp = o->value();
filterCutoff->value( tmp );
writePort( int(FILTER_CUTOFF),tmp );}
        xywh {184 268 148 90} box UP_BOX color 179 labeltype NO_LABEL
        class {Avtk::Filtergraph}
      }
      Fl_Box {} {
        xywh {184 364 148 70} box DOWN_BOX labeltype NO_LABEL
      }
      Fl_Dial filterCutoff {
        label Cutoff
        callback {float tmp = o->value();
filter->value( tmp );
writePort( int(FILTER_CUTOFF),tmp );}
        xywh {200 375 50 45} color 90 labelsize 10
        class {Avtk::Dial}
      }
      Fl_Dial filterLfoMod {
        label Modulation
        callback {float tmp = o->value();
filter->modulation( tmp );
writePort( int(LFO_TO_FILTER_RANGE),tmp );}
        xywh {264 377 50 40} color 90 labelsize 10
        class {Avtk::Dial}
      }
      Fl_Dial adsr {
        label Adsr
        callback {//cutoff = o->value();
//float g = o->getGain();
//gainDial->value( g );
//freq->value( cutoff ); // update dial
//writePort(CUTOFF_FREQ, cutoff);
//writePort(CUTOFF_GAIN, g);}
        xywh {353 64 148 90} box UP_BOX color 179 labeltype NO_LABEL
        class {Avtk::ADSR}
      }
      Fl_Box {} {
        xywh {353 160 148 70} box DOWN_BOX labeltype NO_LABEL
      }
      Fl_Dial sustain {
        label S
        callback {float tmp = o->value();
adsr->sustain( tmp );
writePort( int(ADSR_SUSTAIN),tmp );}
        xywh {427 165 30 30} color 90 labelsize 11
        class {Avtk::Dial}
      }
      Fl_Dial decay {
        label D
        callback {float tmp = o->value();
adsr->decay( tmp );
writePort( int(ADSR_DECAY),tmp );}
        xywh {393 185 30 30} color 90 labelsize 11
        class {Avtk::Dial}
      }
      Fl_Dial attack {
        label A
        callback {float tmp = o->value();
adsr->attack( tmp );
writePort( int(ADSR_ATTACK),tmp );}
        xywh {360 164 30 30} color 90 labelsize 11
        class {Avtk::Dial}
      }
      Fl_Dial release {
        label R
        callback {float tmp = o->value();
adsr->release( tmp );
writePort( int(ADSR_RELEASE),tmp );}
        xywh {464 186 30 30} color 90 labelsize 11
        class {Avtk::Dial}
      }
      Fl_Box volume {
        callback {float tmp = o->value(); //pow( , 4 );
writePort( int(VOLUME), tmp );} selected
        xywh {453 268 48 168} box DOWN_BOX labeltype NO_LABEL
        code0 {\#include <cmath>}
        class {Avtk::Volume}
      }
      Fl_Box comp {
        callback {float tmp = o->getActive();
writePort( int(COMPRESSOR_ENABLE), tmp );}
        xywh {351 268 98 93} box DOWN_BOX labeltype NO_LABEL
        code0 {comp->ratio(0.6);}
        class {Avtk::Compressor}
      }
      Fl_Box {} {
        xywh {351 364 98 72} box DOWN_BOX labeltype NO_LABEL
      }
      Fl_Dial compThres {
        label Thres
        callback {float tmp = o->value();
comp->threshold( tmp );
writePort( int(COMPRESSOR_THRESHOLD),tmp );}
        xywh {404 369 30 30} color 90 labelfont 1 labelsize 11 align 0
        class {Avtk::Dial}
      }
      Fl_Dial compAttack {
        label A
        callback {float tmp = o->value();
//comp->attack( tmp );
writePort( int(COMPRESSOR_ATTACK),tmp );}
        xywh {361 401 30 30} color 90 labelfont 1 labelsize 12 align 0
        class {Avtk::Dial}
      }
      Fl_Dial compMakeup {
        label Gain
        callback {float tmp = o->value();
comp->makeup( tmp );
writePort( int(COMPRESSOR_MAKEUP),tmp );}
        xywh {361 369 30 30} color 90 labelfont 1 labelsize 11 align 0
        class {Avtk::Dial}
      }
      Fl_Dial compRelease {
        label R
        callback {float tmp = o->value();
//comp->release( tmp );
writePort( int(COMPRESSOR_RELEASE),tmp );}
        xywh {404 401 30 30} color 90 labelfont 1 labelsize 12 align 0
        class {Avtk::Dial}
      }
    }
  }
  decl {LV2UI_Write_Function write_function;} {public local
  }
  decl {LV2UI_Controller controller;} {public local
  }
  Function {idle()} {open return_type void
  } {
    code {Fl::check();
Fl::flush();} {}
  }
  Function {getWidth()} {open return_type int
  } {
    code {return window->w();} {}
  }
  Function {getHeight()} {open return_type int
  } {
    code {return window->h();} {}
  }
  decl {float gain;} {private local
  }
  decl {float cutoff;} {private local
  }
  decl {float Q;} {private local
  }
  Function {writePort(int port, float& value)} {open
  } {
    code {//cout << "port " << port << " value " << value << endl;
write_function(controller, port, sizeof(float), 0, &value);} {}
  }
} 
